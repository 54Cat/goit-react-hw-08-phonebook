{"version":3,"file":"static/js/25.72c1d87b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Utils/Notification.js","components/Utils/Loader.js","pages/Contact.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Form = styled.form` \ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 400px;\nmargin-right: auto;\nmargin-left: auto;\npadding: 20px; \nborder-radius: 4px;\nborder: 1px solid #5b5b5b;\n`;\n\nconst Label = styled.label` \ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nwidth: 288px;\nmargin-bottom: 16px;\n`;\n\nconst Input = styled.input`\nwidth: 200px; \npadding: 8px;\nbackground-color: #f5f5f5;\nborder: 1px solid #afafaf;\nborder-radius: 8px;\n`;\n\nconst Btn = styled.button` \nmin-width: 100px;\npadding: 4px;\ncursor: pointer;\nborder-radius: 8px;\nborder: 2px solid #5b5b5b;\nbackground-color: #f5f5f5;\n\n&:hover{\n  color: orangered;\n}\n`;\n\nexport {\n  Form,\n  Input,\n  Label,\n  Btn\n}\n","export const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;","export const getFilter = state => state.filter.filter;","import { useState } from \"react\";\nimport { Form, Label, Input, Btn } from 'components/ContactForm/ContactFormStyled';\nimport { nanoid } from \"nanoid\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid(4);\n  const numberInputId = nanoid(4);\n\n  const handleInputChange = e => {\n    switch (e.currentTarget.name) {   \n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      \n      default:\n        return;\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    resetForm();\n  }\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameInputId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id={nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleInputChange}\n            required />\n        </Label>\n        <Label htmlFor={numberInputId}>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            id={numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleInputChange}\n            required />\n        </Label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n    );\n  }\n","import { ContList, ContItem, Name, Tel, Btn } from 'components/ContactList/ContactListStyled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport default function ContactList({contacts}) {\n    const dispatch = useDispatch();\n    \n    return (\n        <ContList>\n            {contacts.map(({ id, name, number }) => (\n                <ContItem key={id}>\n                    <Name>{name}:\n                        <Tel>{number}</Tel>\n                    </Name>\n                    {/* <Btn type=\"button\" onClick={() => dispatch(editContact(id))}>Edit</Btn> */}\n\n                    <Btn type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</Btn>\n                </ContItem>\n            ))}\n        </ContList>\n    );\n}\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled.div` \ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-right: auto;\nmargin-left: auto;\n`;\n\nconst Label = styled.label` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 16px;\n`;\n\nconst Input = styled.input`\nwidth: 200px; \npadding: 8px;\nbackground-color: #f5f5f5;\nborder: 1px solid #afafaf;\nborder-radius: 8px;\nmargin-left: 12px;\n`;\n\nexport {\n  Wrapper,\n  Label,\n  Input\n}\n","import PropTypes from 'prop-types';\nimport { Wrapper, Label, Input } from 'components/Filter/FilterStyled';\nimport { nanoid } from \"nanoid\";\n\nconst filterInputId = nanoid(4);\n\nexport default function Filter({ onChange}) {\n    return (\n        <Wrapper>\n            <Label htmlFor={filterInputId}>Find contact by name\n                <Input\n                    type=\"text\"\n                    name=\"findByName\"\n                    id={filterInputId}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    onChange={onChange}\n                />\n            </Label>\n        </Wrapper>\n    );\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func,\n};","import { Notif } from 'components/Utils/UtilsStyled';\n\nexport function NoContacts() {\n    return (\n        <Notif>There are no contacts.</Notif>\n    );\n}\n\nexport function Error() {\n  return (\n    <Notif>Error, something went wrong. Please try again.</Notif>\n  );\n};","import {Blocks } from 'react-loader-spinner';\n\nexport default function Loader ({ isLoading }) {\n  return (\n    <Blocks\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n    />\n  );\n};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Wrapper, TitleMain, TitleSecond } from 'components/Utils/UtilsStyled';\nimport { addContact } from \"redux/contacts/contactsOperations\";\nimport { getContacts, getLoading, getError } from 'redux/contacts/contactsSelectors';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { NoContacts, Error } from 'components/Utils/Notification';\nimport Loader from 'components/Utils/Loader';\n\nexport default function Contact() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const isLoading = useSelector(getLoading);\n    const isError = useSelector(getError);\n    const filter = useSelector(getFilter);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContact())\n    }, [dispatch]);\n    \n    const duplicateContact = (name) => {\n        const normalizedName = name.toLowerCase();\n        return contacts.find(item => item.name.toLowerCase() === normalizedName);\n    }\n\n    const addContacts = ( name, number) => {\n        if (duplicateContact(name)) {\n        return alert(`\"${name}\" is already in your Phonebook`);\n        };\n        dispatch(addContact({ name, number }));\n    }\n\n    const onChangeFilter = (e) => {\n        dispatch(changeFilter(e.currentTarget.value));\n    }\n        \n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n    }\n\n    return (  \n        <Container>\n\n            <Wrapper>\n                <TitleMain>Phonebook</TitleMain>\n                <ContactForm onSubmit={addContacts} />\n            </Wrapper>\n\n            {isLoading && <Loader />}\n            {isError ? (<Error />):\n                (contacts.length === 0\n                    ? (<NoContacts />)\n                    : (<Wrapper>\n                        <TitleSecond>Contacts</TitleSecond>\n                        <Filter onChange={onChangeFilter}/>\n                        <ContactList contacts={getVisibleContacts()} />\n                        </Wrapper>)\n                )\n            }\n        </Container>\n    ); \n}\n"],"names":["Form","styled","Label","Input","Btn","getContacts","state","contacts","items","getLoading","isLoading","getError","error","getFilter","filter","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleInputChange","e","currentTarget","value","resetForm","preventDefault","htmlFor","type","id","pattern","title","onChange","required","ContactList","dispatch","useDispatch","map","onClick","deleteContact","Wrapper","filterInputId","Filter","NoContacts","Error","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Contact","useSelector","isError","useEffect","contactsOperations","normalizedName","toLowerCase","find","item","duplicateContact","alert","addContact","length","changeFilter","normalizedFilter","includes","getVisibleContacts"],"sourceRoot":""}