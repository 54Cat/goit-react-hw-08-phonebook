{"version":3,"file":"static/js/557.97927935.chunk.js","mappings":"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","sources":["redux/filter/filterSelectors.js","components/Modal/UpdateContactModal.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Utils/Notification.js","components/Utils/Loader.js","pages/Contact.js"],"sourcesContent":["export const getFilter = state => state.filter.filter;","import { useState } from \"react\";\nimport { Form } from 'components/ContactForm/ContactFormStyled';\nimport Modal from '@material-ui/core/Modal';\nimport { TitleMain } from 'components/Utils/UtilsStyled';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: '8px',\n  },\n  input: {\n    width: '300px',\n  },\n  button: {\n    width: '300px',\n  },\n}));\n\nexport function UpdateContactForm({ oldName, oldNumber, openModal, setOpenModal }) {\n    const [name, setName] = useState(oldName);\n    const [number, setNumber] = useState(oldNumber);\n    const classes = useStyles();\n\n    const handleChange = e => {\n        switch (e.currentTarget.name) {   \n        case 'name':\n            setName(e.currentTarget.value);\n            break;\n\n        case 'number':\n            setNumber(e.currentTarget.value);\n            break;\n        \n        default:\n            return;\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        resetForm();\n    }\n\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n    }\n    \n    return (          \n        <Modal\n            open={openModal}\n            onClose={()=>setOpenModal(false)}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n\n            <Form onSubmit={handleSubmit}>\n         \n            <TitleMain>Edit Contact</TitleMain>\n                \n            <FormControl className={clsx(classes.margin)} variant=\"outlined\">\n                <InputLabel htmlFor=\"name\">Name</InputLabel>\n                <OutlinedInput\n                id=\"name\"\n                name=\"name\"\n                type='text'\n                value={name}\n                onChange={handleChange}\n                labelWidth={45}\n                className={clsx(classes.input)} \n                required\n                />\n            </FormControl>\n\n            <FormControl className={clsx(classes.margin)} variant=\"outlined\">\n                <InputLabel htmlFor=\"number\">Number</InputLabel>\n                <OutlinedInput\n                id=\"number\"\n                name=\"number\"\n                type='tel'\n                value={number}\n                onChange={handleChange}\n                labelWidth={60}\n                className={clsx(classes.input)} \n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                required\n                />\n            </FormControl>\n                \n\n            <Button className={clsx(classes.button, classes.margin)} variant=\"outlined\">Cancel</Button>\n\n            <Button className={clsx(classes.button, classes.margin)} type=\"submit\" variant=\"outlined\">Save</Button>\n          \n            </Form>\n          \n        </Modal>\n    );\n}","import { ContList, ContItem, Name, Tel, BtnCont, ConteinerCont } from 'components/ContactList/ContactListStyled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { TitleSecond } from 'components/Utils/UtilsStyled';\nimport { IconButton } from '@material-ui/core';\nimport { Delete, Edit, Call, Chat, Person } from '@material-ui/icons';\n\nimport {UpdateContactForm} from 'components/Modal/UpdateContactModal';\nimport { useState } from 'react';\n// import { Button } from '@material-ui/core';\n\nexport default function ContactList({contacts}) {\n    const dispatch = useDispatch();\n    const [openModal, setOpenModal] = useState(false);\n    \n    return (\n            <ContList>\n                <TitleSecond>Contacts</TitleSecond>\n                {contacts.map(({ id, name, number }) => (\n                    <ContItem key={id}>\n\n                        <IconButton aria-label=\"person\">\n                            <Person fontSize=\"large\" />\n                        </IconButton>\n\n                        <ConteinerCont>\n                            <Name>{name}:\n                                <Tel>{number}</Tel>\n                            </Name>\n\n                            <BtnCont>\n                                <IconButton aria-label=\"call\">\n                                    <Call />\n                                </IconButton>\n\n                                <IconButton aria-label=\"chat\">\n                                    <Chat />\n                                </IconButton>\n\n                                <IconButton aria-label=\"edit\" onClick={()=>setOpenModal(true)}>\n                                    <Edit />\n                                </IconButton>\n                                \n                                <IconButton aria-label=\"delete\" onClick={() => dispatch(deleteContact(id))}>\n                                    <Delete />\n                                </IconButton>\n                            </BtnCont>\n                        </ConteinerCont>\n\n                        <UpdateContactForm oldName={name} oldNumber={number} openModal={openModal} setOpenModal={setOpenModal} />\n            \n                    </ContItem>\n                ))}\n            \n            </ContList>\n    );\n}\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled.div` \ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-right: auto;\nmargin-left: auto;\n`;\n\nconst Label = styled.label` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 16px;\n`;\n\nconst Input = styled.input`\nwidth: 200px; \npadding: 8px;\nbackground-color: #f5f5f5;\nborder: 1px solid #afafaf;\nborder-radius: 8px;\nmargin-left: 12px;\n`;\n\nexport {\n  Wrapper,\n  Label,\n  Input\n}\n","import PropTypes from 'prop-types';\nimport { Wrapper, } from 'components/Filter/FilterStyled';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n    marginBottom: \"14px\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\nexport default function Filter({ onChange }) {\n    const classes = useStyles();\n    \n    return (\n        <Wrapper>\n            <Paper component=\"form\" variant=\"outlined\" className={classes.root}>\n\n                <InputBase\n                    className={classes.input}\n                    placeholder=\"Search Contact\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    id=\"search\"\n                    name=\"findByName\"\n                    type=\"text\"\n                    onChange={onChange}\n                />\n                <IconButton className={classes.iconButton} aria-label=\"search\">\n                    <SearchIcon />\n                </IconButton>\n                \n            </Paper>\n        </Wrapper>\n    );\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func,\n};","import { Notif } from 'components/Utils/UtilsStyled';\n\nexport function NoContacts() {\n    return (\n        <Notif>There are no contacts.</Notif>\n    );\n}\n\nexport function Error() {\n  return (\n    <Notif>Error, something went wrong. Please try again.</Notif>\n  );\n};","import {Blocks } from 'react-loader-spinner';\n\nexport default function Loader ({ isLoading }) {\n  return (\n    <Blocks\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n    />\n  );\n};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Wrapper, TitleSecond } from 'components/Utils/UtilsStyled';\nimport { getContacts, getLoading, getError } from 'redux/contacts/contactsSelectors';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { NoContacts, Error } from 'components/Utils/Notification';\nimport Loader from 'components/Utils/Loader';\n\nexport default function Contact() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const isLoading = useSelector(getLoading);\n    const isError = useSelector(getError);\n    const filter = useSelector(getFilter);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContact())\n    }, [dispatch]);    \n\n    const onChangeFilter = (e) => {\n        dispatch(changeFilter(e.currentTarget.value));\n    }\n        \n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n    }\n\n    return (  \n        <Container>\n            \n            {isLoading && <Loader />}\n            {isError ? (<Error />):\n                (contacts.length === 0\n                    ? (<NoContacts />)\n                    : (<Wrapper>\n                        <TitleSecond>Find contact by name</TitleSecond>\n                        <Filter onChange={onChangeFilter}/>\n                        <ContactList contacts={getVisibleContacts()} />\n                    </Wrapper>)\n                )\n            }\n        </Container>\n    ); \n}\n"],"names":["getFilter","state","filter","useStyles","makeStyles","root","display","flexWrap","margin","input","width","button","UpdateContactForm","oldName","oldNumber","openModal","setOpenModal","useState","name","setName","number","setNumber","classes","handleChange","e","currentTarget","value","resetForm","Modal","open","onClose","onSubmit","preventDefault","FormControl","className","clsx","variant","InputLabel","htmlFor","OutlinedInput","id","type","onChange","labelWidth","required","pattern","Button","ContactList","contacts","dispatch","useDispatch","map","IconButton","Person","fontSize","Call","Chat","onClick","Edit","deleteContact","Delete","Wrapper","styled","theme","padding","alignItems","marginBottom","marginLeft","spacing","flex","iconButton","Filter","Paper","component","InputBase","placeholder","inputProps","Search","NoContacts","Error","Loader","isLoading","visible","height","ariaLabel","wrapperStyle","wrapperClass","Contact","useSelector","getContacts","getLoading","isError","getError","useEffect","contactsOperations","length","changeFilter","normalizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}