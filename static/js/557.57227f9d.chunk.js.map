{"version":3,"file":"static/js/557.57227f9d.chunk.js","mappings":"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","sources":["redux/filter/filterSelectors.js","components/Modal/UpdateContactModal.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Utils/Notification.js","components/Utils/Loader.js","pages/Contact.js"],"sourcesContent":["export const getFilter = state => state.filter.filter;","import { useState } from \"react\";\nimport { Form, Label, Input, Btn } from 'components/ContactForm/ContactFormStyled';\nimport { nanoid } from \"nanoid\";\nimport Modal from '@material-ui/core/Modal';\n\nexport function UpdateContactForm({ openModal, setOpenModal }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = nanoid(4);\n    const numberInputId = nanoid(4);\n\n    const handleInputChange = e => {\n        switch (e.currentTarget.name) {   \n        case 'name':\n            setName(e.currentTarget.value);\n            break;\n\n        case 'number':\n            setNumber(e.currentTarget.value);\n            break;\n        \n        default:\n            return;\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        resetForm();\n    }\n\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n    }\n    \n    return (          \n        <Modal\n            open={openModal}\n            onClose={()=>setOpenModal(false)}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n\n            <Form onSubmit={handleSubmit}>\n                <Label htmlFor={nameInputId}>\n                Name\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id={nameInputId}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    value={name}\n                    onChange={handleInputChange}\n                    required />\n                </Label>\n                <Label htmlFor={numberInputId}>\n                Number\n                <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    id={numberInputId}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    value={number}\n                    onChange={handleInputChange}\n                    required />\n                </Label>\n                <Btn type=\"submit\">Edit contact</Btn>\n            </Form>\n          \n        </Modal>\n    );\n}","import { ContList, ContItem, Name, Tel, BtnCont, ConteinerCont } from 'components/ContactList/ContactListStyled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { TitleSecond } from 'components/Utils/UtilsStyled';\nimport { IconButton } from '@material-ui/core';\nimport { Delete, Edit, Call, Chat, Person } from '@material-ui/icons';\n\nimport {UpdateContactForm} from 'components/Modal/UpdateContactModal';\nimport { useState } from 'react';\n// import { Button } from '@material-ui/core';\n\nexport default function ContactList({contacts}) {\n    const dispatch = useDispatch();\n    const [openModal, setOpenModal] = useState(false);\n    \n    return (\n            <ContList>\n                <TitleSecond>Contacts</TitleSecond>\n                {contacts.map(({ id, name, number }) => (\n                    <ContItem key={id}>\n\n                        <IconButton aria-label=\"delete\">\n                            <Person fontSize=\"large\" />\n                        </IconButton>\n\n                        <ConteinerCont>\n                            <>\n                                <Name>{name}:\n                                    <Tel>{number}</Tel>\n                                </Name>\n                            </>\n\n                            <BtnCont>\n                                <IconButton aria-label=\"delete\">\n                                    <Call />\n                                </IconButton>\n\n                                <IconButton aria-label=\"delete\">\n                                    <Chat />\n                                </IconButton>\n\n                                <IconButton aria-label=\"delete\" onClick={()=>setOpenModal(true)}>\n                                    <Edit />\n                                </IconButton>\n                                \n                                <IconButton aria-label=\"delete\" onClick={() => dispatch(deleteContact(id))}>\n                                    <Delete />\n                                </IconButton>\n                            </BtnCont>\n                        </ConteinerCont>\n\n                    </ContItem>\n                ))}\n            {/* <Button onClick={()=>setOpenModal(true)}>Open modal</Button> */}\n            <UpdateContactForm openModal={openModal} setOpenModal={setOpenModal} />\n            </ContList>\n    );\n}\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled.div` \ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-right: auto;\nmargin-left: auto;\n`;\n\nconst Label = styled.label` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 16px;\n`;\n\nconst Input = styled.input`\nwidth: 200px; \npadding: 8px;\nbackground-color: #f5f5f5;\nborder: 1px solid #afafaf;\nborder-radius: 8px;\nmargin-left: 12px;\n`;\n\nexport {\n  Wrapper,\n  Label,\n  Input\n}\n","import PropTypes from 'prop-types';\nimport { Wrapper, Label, Input } from 'components/Filter/FilterStyled';\nimport { nanoid } from \"nanoid\";\n\nconst filterInputId = nanoid(4);\n\nexport default function Filter({ onChange}) {\n    return (\n        <Wrapper>\n            <Label htmlFor={filterInputId}>Name\n                <Input\n                    type=\"text\"\n                    name=\"findByName\"\n                    id={filterInputId}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    onChange={onChange}\n                />\n            </Label>\n        </Wrapper>\n    );\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func,\n};","import { Notif } from 'components/Utils/UtilsStyled';\n\nexport function NoContacts() {\n    return (\n        <Notif>There are no contacts.</Notif>\n    );\n}\n\nexport function Error() {\n  return (\n    <Notif>Error, something went wrong. Please try again.</Notif>\n  );\n};","import {Blocks } from 'react-loader-spinner';\n\nexport default function Loader ({ isLoading }) {\n  return (\n    <Blocks\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n    />\n  );\n};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Wrapper, TitleSecond } from 'components/Utils/UtilsStyled';\nimport { getContacts, getLoading, getError } from 'redux/contacts/contactsSelectors';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { NoContacts, Error } from 'components/Utils/Notification';\nimport Loader from 'components/Utils/Loader';\n\nexport default function Contact() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const isLoading = useSelector(getLoading);\n    const isError = useSelector(getError);\n    const filter = useSelector(getFilter);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContact())\n    }, [dispatch]);    \n\n    const onChangeFilter = (e) => {\n        dispatch(changeFilter(e.currentTarget.value));\n    }\n        \n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n    }\n\n    return (  \n        <Container>\n            \n            {isLoading && <Loader />}\n            {isError ? (<Error />):\n                (contacts.length === 0\n                    ? (<NoContacts />)\n                    : (<Wrapper>\n                        <TitleSecond>Find contact by name</TitleSecond>\n                        <Filter onChange={onChangeFilter}/>\n                        <ContactList contacts={getVisibleContacts()} />\n                    </Wrapper>)\n                )\n            }\n        </Container>\n    ); \n}\n"],"names":["getFilter","state","filter","UpdateContactForm","openModal","setOpenModal","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleInputChange","e","currentTarget","value","resetForm","Modal","open","onClose","onSubmit","preventDefault","htmlFor","type","id","pattern","title","onChange","required","ContactList","contacts","dispatch","useDispatch","map","IconButton","Person","fontSize","Call","Chat","onClick","Edit","deleteContact","Delete","Wrapper","styled","Label","Input","filterInputId","Filter","NoContacts","Error","Loader","isLoading","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Contact","useSelector","getContacts","getLoading","isError","getError","useEffect","contactsOperations","length","changeFilter","normalizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}