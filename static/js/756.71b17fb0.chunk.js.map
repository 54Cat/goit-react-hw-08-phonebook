{"version":3,"file":"static/js/756.71b17fb0.chunk.js","mappings":"8VAgBMA,GAAYC,EAAAA,EAAAA,IAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTC,SAAU,QAEZC,OAAQ,CACNA,OAAQ,OAEVC,MAAO,CACLC,MAAO,SAETC,OAAQ,CACND,MAAO,SAZkB,IAgBd,SAASE,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCN,EAAAA,EAAAA,WAAU,GAAlD,eAAOO,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAUrB,IAEVsB,EAAe,SAAAC,GACnB,OAAQA,EAAEC,cAAcb,MACtB,IAAK,OACHC,EAAQW,EAAEC,cAAcC,OACxB,MAEF,IAAK,QACHX,EAASS,EAAEC,cAAcC,OACzB,MAEF,IAAK,WACHT,EAAYO,EAAEC,cAAcC,OAC5B,MAEF,QACE,OAEL,EAkBD,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,SAXS,SAAAH,GACnBA,EAAEI,iBACFR,GAASS,EAAAA,EAAAA,IAAS,CAAEjB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAKK,WAEA,SAAC,KAAD,4BAEA,UAAC,IAAD,CAAaa,WAAWC,EAAAA,EAAAA,GAAKT,EAAQhB,QAAS0B,QAAQ,WAAtD,WACM,SAAC,IAAD,CAAYC,QAAQ,OAApB,mBACA,SAAC,IAAD,CACEC,GAAG,OACHtB,KAAK,OACLuB,KAAMvB,EAAO,OAAS,OACtBc,MAAOd,EACPwB,SAAUb,EACVc,WAAY,GACZP,WAAWC,EAAAA,EAAAA,GAAKT,EAAQf,aAIhC,UAAC,IAAD,CAAauB,WAAWC,EAAAA,EAAAA,GAAKT,EAAQhB,QAAS0B,QAAQ,WAAtD,WACM,SAAC,IAAD,CAAYC,QAAQ,QAApB,oBACA,SAAC,IAAD,CACEC,GAAG,QACHtB,KAAK,QACLuB,KAAMrB,EAAQ,OAAS,QACvBY,MAAOZ,EACPsB,SAAUb,EACVc,WAAY,GACZP,WAAWC,EAAAA,EAAAA,GAAKT,EAAQf,aAI5B,UAAC,IAAD,CAAauB,WAAWC,EAAAA,EAAAA,GAAKT,EAAQhB,QAAS0B,QAAQ,WAAtD,WACE,SAAC,IAAD,CAAYC,QAAQ,WAApB,uBACA,SAAC,IAAD,CACEC,GAAG,WACHtB,KAAK,WACLuB,KAAMjB,EAAe,OAAS,WAC9BQ,MAAOV,EACPoB,SAAUb,EACVe,cACA,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXC,QA7Dc,WAC9BrB,GAAkBD,EACnB,EA4DiBuB,YA1Dc,SAACC,GAC/BA,EAAMd,gBACP,EAyDiBe,KAAK,MAJP,SAMGzB,GAAe,SAAC,IAAD,KAAiB,SAAC,IAAD,QAIrCmB,WAAY,GACZP,WAAWC,EAAAA,EAAAA,GAAKT,EAAQf,aAI5B,SAAC,IAAD,CAAQuB,WAAWC,EAAAA,EAAAA,GAAKT,EAAQb,OAAQa,EAAQhB,QAAS6B,KAAK,SAASH,QAAQ,WAA/E,2BAOX,C","sources":["pages/Register.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/authOperations\";\nimport { Form } from 'components/ContactForm/ContactFormStyled';\nimport { Container, Wrapper, TitleMain } from 'components/Utils/UtilsStyled';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: '8px',\n  },\n  input: {\n    width: '300px',\n  },\n  button: {\n    width: '300px',\n  },\n}));\n\nexport default function Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState( false);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {   \n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'email':\n        setEmail(e.currentTarget.value);\n        break;\n      \n      case 'password':\n        setPassword(e.currentTarget.value);\n        break;\n      \n      default:\n        return;\n    }\n  }\n\n  const handleClickShowPassword = () => {\n    setShowPassword( !showPassword );\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <Container>\n      <Wrapper>\n        <Form onSubmit={handleSubmit}>\n            \n        <TitleMain>Registration</TitleMain>\n\n        <FormControl className={clsx(classes.margin)} variant=\"outlined\">\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <OutlinedInput\n                id=\"name\"\n                name=\"name\"\n                type={name ? 'text' : 'name'}\n                value={name}\n                onChange={handleChange}\n                labelWidth={40}\n                className={clsx(classes.input)} \n              />\n            </FormControl>\n            \n        <FormControl className={clsx(classes.margin)} variant=\"outlined\">\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\n              <OutlinedInput\n                id=\"email\"\n                name=\"email\"\n                type={email ? 'text' : 'email'}\n                value={email}\n                onChange={handleChange}\n                labelWidth={40}\n                className={clsx(classes.input)} \n              />\n            </FormControl>\n\n            <FormControl className={clsx(classes.margin)} variant=\"outlined\">\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"password\"\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                value={password}\n                onChange={handleChange}\n                endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n                }\n                labelWidth={70}\n                className={clsx(classes.input)} \n              />\n            </FormControl>\n\n            <Button className={clsx(classes.button, classes.margin)} type=\"submit\" variant=\"outlined\" >SING UP</Button>\n\n        </Form>\n      </Wrapper>\n    </Container>\n      \n  );\n}\n"],"names":["useStyles","makeStyles","root","display","flexWrap","margin","input","width","button","Register","useState","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","dispatch","useDispatch","classes","handleChange","e","currentTarget","value","onSubmit","preventDefault","register","className","clsx","variant","htmlFor","id","type","onChange","labelWidth","endAdornment","position","onClick","onMouseDown","event","edge"],"sourceRoot":""}