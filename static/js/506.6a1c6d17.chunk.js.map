{"version":3,"file":"static/js/506.6a1c6d17.chunk.js","mappings":"oPAAaA,EAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOA,MAAjB,E,mBCKf,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,UAAC,KAAD,YACI,SAAC,KAAD,uBACCF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,UAAC,KAAD,YACI,UAAC,KAAD,WAAOD,EAAP,KACI,SAAC,KAAD,UAAMC,QAIV,SAAC,KAAD,CAAKC,KAAK,SAASC,QAAS,kBAAMP,GAASQ,EAAAA,EAAAA,IAAcL,GAA7B,EAA5B,sBANWA,EADL,MAYzB,C,6BCrBKM,EAAUC,EAAAA,EAAAA,IAAH,iIAQPC,EAAQD,EAAAA,EAAAA,MAAH,+GAOLE,EAAQF,EAAAA,EAAAA,MAAH,wJCbLG,GAAgBC,E,QAAAA,IAAO,GAEd,SAASC,EAAT,GAA8B,IAAZC,EAAW,EAAXA,SAC7B,OACI,SAACP,EAAD,WACI,UAACE,EAAD,CAAOM,QAASJ,EAAhB,kBACI,SAACD,EAAD,CACIN,KAAK,OACLF,KAAK,aACLD,GAAIU,EACJK,QAAQ,yHACRF,SAAUA,QAK7B,CClBM,SAASG,IACZ,OACI,SAAC,KAAD,oCAEP,CAEM,SAASC,IACd,OACE,SAAC,KAAD,4DAEH,C,cCVc,SAASC,EAAT,GAAiC,IAAdC,EAAa,EAAbA,UAChC,OACE,SAAC,KAAD,CACEC,QAASD,EACTE,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,kBAGlB,CCDc,SAASC,IACpB,IAAM7B,GAAWC,EAAAA,EAAAA,MACXF,GAAW+B,EAAAA,EAAAA,IAAYC,EAAAA,IACvBT,GAAYQ,EAAAA,EAAAA,IAAYE,EAAAA,IACxBC,GAAUH,EAAAA,EAAAA,IAAYI,EAAAA,IACtBrC,GAASiC,EAAAA,EAAAA,IAAYnC,IAE3BwC,EAAAA,EAAAA,YAAU,WACNnC,EAASoC,EAAAA,KACZ,GAAE,CAACpC,IAWJ,OACI,UAAC,KAAD,WAEKsB,IAAa,SAACD,EAAD,IACbY,GAAW,SAACb,EAAD,IACa,IAApBrB,EAASsC,QACH,SAAClB,EAAD,KACA,UAAC,KAAD,YACC,SAAC,KAAD,oCACA,SAACJ,EAAD,CAAQC,SAlBL,SAACsB,GACpBtC,GAASuC,EAAAA,EAAAA,GAAaD,EAAEE,cAAcC,OACzC,KAiBmB,SAAC3C,EAAD,CAAaC,SAfN,WACvB,IAAM2C,EAAmB7C,EAAO8C,cAChC,OAAO5C,EAASF,QAAO,qBAAGO,KAAgBuC,cAAcC,SAASF,EAA1C,GAC1B,CAY0CG,UAM9C,C","sources":["redux/filter/filterSelectors.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Utils/Notification.js","components/Utils/Loader.js","pages/Contact.js"],"sourcesContent":["export const getFilter = state => state.filter.filter;","import { ContList, ContItem, Name, Tel, Btn } from 'components/ContactList/ContactListStyled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { TitleSecond } from 'components/Utils/UtilsStyled';\n\nexport default function ContactList({contacts}) {\n    const dispatch = useDispatch();\n    \n    return (\n        <ContList>\n            <TitleSecond>Contacts</TitleSecond>\n            {contacts.map(({ id, name, number }) => (\n                <ContItem key={id}>\n                    <Name>{name}:\n                        <Tel>{number}</Tel>\n                    </Name>\n                    {/* <Btn type=\"button\" onClick={() => dispatch(editContact(id))}>Edit</Btn> */}\n\n                    <Btn type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</Btn>\n                </ContItem>\n            ))}\n        </ContList>\n    );\n}\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled.div` \ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-right: auto;\nmargin-left: auto;\n`;\n\nconst Label = styled.label` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 16px;\n`;\n\nconst Input = styled.input`\nwidth: 200px; \npadding: 8px;\nbackground-color: #f5f5f5;\nborder: 1px solid #afafaf;\nborder-radius: 8px;\nmargin-left: 12px;\n`;\n\nexport {\n  Wrapper,\n  Label,\n  Input\n}\n","import PropTypes from 'prop-types';\nimport { Wrapper, Label, Input } from 'components/Filter/FilterStyled';\nimport { nanoid } from \"nanoid\";\n\nconst filterInputId = nanoid(4);\n\nexport default function Filter({ onChange}) {\n    return (\n        <Wrapper>\n            <Label htmlFor={filterInputId}>Name\n                <Input\n                    type=\"text\"\n                    name=\"findByName\"\n                    id={filterInputId}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    onChange={onChange}\n                />\n            </Label>\n        </Wrapper>\n    );\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func,\n};","import { Notif } from 'components/Utils/UtilsStyled';\n\nexport function NoContacts() {\n    return (\n        <Notif>There are no contacts.</Notif>\n    );\n}\n\nexport function Error() {\n  return (\n    <Notif>Error, something went wrong. Please try again.</Notif>\n  );\n};","import {Blocks } from 'react-loader-spinner';\n\nexport default function Loader ({ isLoading }) {\n  return (\n    <Blocks\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n    />\n  );\n};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Wrapper, TitleSecond } from 'components/Utils/UtilsStyled';\nimport { getContacts, getLoading, getError } from 'redux/contacts/contactsSelectors';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { NoContacts, Error } from 'components/Utils/Notification';\nimport Loader from 'components/Utils/Loader';\n\nexport default function Contact() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const isLoading = useSelector(getLoading);\n    const isError = useSelector(getError);\n    const filter = useSelector(getFilter);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContact())\n    }, [dispatch]);    \n\n    const onChangeFilter = (e) => {\n        dispatch(changeFilter(e.currentTarget.value));\n    }\n        \n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n    }\n\n    return (  \n        <Container>         \n\n            {isLoading && <Loader />}\n            {isError ? (<Error />):\n                (contacts.length === 0\n                    ? (<NoContacts />)\n                    : (<Wrapper>\n                        <TitleSecond>Find contact by name</TitleSecond>\n                        <Filter onChange={onChangeFilter}/>\n                        <ContactList contacts={getVisibleContacts()} />\n                        </Wrapper>)\n                )\n            }\n        </Container>\n    ); \n}\n"],"names":["getFilter","state","filter","ContactList","contacts","dispatch","useDispatch","map","id","name","number","type","onClick","deleteContact","Wrapper","styled","Label","Input","filterInputId","nanoid","Filter","onChange","htmlFor","pattern","NoContacts","Error","Loader","isLoading","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Contact","useSelector","getContacts","getLoading","isError","getError","useEffect","contactsOperations","length","e","changeFilter","currentTarget","value","normalizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}